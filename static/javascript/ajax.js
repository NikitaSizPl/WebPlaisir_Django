document.querySelectorAll(".btn").forEach(button => {
    button.addEventListener("click", function() {
        console.log("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞: ", this);

        let basketItemId = this.dataset.basketItemId; // –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ–≤–∞—Ä–∞
        let quantityInput = document.querySelector(`.quantity-input[data-basket-item-id="${basketItemId}"]`);
        let currentQuantity = parseInt(quantityInput.value);

        if (this.classList.contains("plus")) {
            increaseQuantity(basketItemId, quantityInput);
        } else if (this.classList.contains("minus")) {
            decreaseQuantity(basketItemId, quantityInput);
        }
    });
});

function increaseQuantity(basketItemId, quantityInput) {
    let currentQuantity = parseInt(quantityInput.value);
    currentQuantity += 1;
    console.log(`‚ûï –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: item_id=${basketItemId}, new_quantity=${currentQuantity}`);
    quantityInput.value = currentQuantity;
    updateCart(basketItemId, currentQuantity);
}

function decreaseQuantity(basketItemId, quantityInput) {
    let currentQuantity = parseInt(quantityInput.value);
    if (currentQuantity > 1) {
        currentQuantity -= 1;
        console.log(`‚ûñ –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: item_id=${basketItemId}, new_quantity=${currentQuantity}`);
        quantityInput.value = currentQuantity;
        updateCart(basketItemId, currentQuantity);
    }
}


function getCSRFToken() {
    return document.querySelector('meta[name="csrf-token"]').getAttribute('content');
}

function updateCart(basketItemId, currentQuantity) {
    console.log(`‚ñ∂Ô∏è –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã: item_id=${basketItemId}, quantity=${currentQuantity}`);

    fetch('/basket/update_basket/', {
        method: "POST",
        headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': getCSRFToken(),
        },
        body: JSON.stringify({
            item_id: basketItemId,
            quantity: currentQuantity
        })
    })
    .then(response => {
        console.log("üîç –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω:", response);
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log("üì© JSON-–æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
        if (data.success) {
            console.log(`‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º HTML: item_total_price=${data.item_total_price}, basket_total_price=${data.basket_total_price}`);

            document.querySelector(`.basket-item-total-price[data-basket-item-id="${basketItemId}"]`).textContent = data.item_total_price;
            document.getElementById("basket-total-price").textContent = "–û–±—â–∞—è —Å—É–º–º–∞: " + data.basket_total_price;
        } else {
            console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞:", data.message);
            alert("–û—à–∏–±–∫–∞: " + data.message);
        }
    })
    .catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã:", error));
}
