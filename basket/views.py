import json
from django.shortcuts import render, redirect, get_object_or_404
from django.views.decorators.csrf import csrf_exempt

from basket.models import Basket, BasketItem
from products.models import Product
from django.conf import settings
from django.http import JsonResponse

# Create your views here.
def basket_base(request):
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if request.user.is_authenticated:
        # –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        basket, create = Basket.objects.get_or_create(user=request.user)
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    else:
        # –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ —Å–µ—Å—Å–∏–∏
        basket_id = request.session.get(settings.BASKET_SESSION_ID)
        if not basket_id:
            # —Å–æ–∑–¥–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Å–µ—Å—Å–∏–∏
            basket = Basket.objects.create()
            request.session[settings.BASKET_SESSION_ID] = basket.id
        else:
            # –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –µ—Å–ª–∏ –æ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞
            basket = Basket.objects.filter(id=basket_id).first()
    context = {
        'basket': basket,
        'basket_item': BasketItem.objects.filter(basket=basket),
    }
    return render(request, 'basket/basket.html', context)


def add_to_basket(request, product_id):
    product = get_object_or_404(Product, id=product_id)
    # –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if request.user.is_authenticated:
        basket, create = Basket.objects.get_or_create(user=request.user)
        basket_item = BasketItem.objects.filter(basket=basket, product=product).first()
    # –î–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    else:
        # –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ —Å–µ—Å—Å–∏–∏
        basket_id = request.session.get(settings.BASKET_SESSION_ID)
        if not basket_id:
            # —Å–æ–∑–¥–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Å–µ—Å—Å–∏–∏
            basket = Basket.objects.create()
            request.session[settings.BASKET_SESSION_ID] = basket.id
        else:
            # –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –µ—Å–ª–∏ –æ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞
            basket = Basket.objects.get(id=basket_id)
        basket_item = BasketItem.objects.filter(basket=basket, product=product).first()

    if basket_item:
        basket_item.quantity += 1
        basket_item.save()
    else:
        BasketItem.objects.create(basket=basket, product=product, quantity=1)
    return redirect('basket:basket')


def del_from_basket(request, product_id):
    product = get_object_or_404(Product, id=product_id)
    # –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if request.user.is_authenticated:
        basket = Basket.objects.get(user=request.user)
        basket_item = BasketItem.objects.filter(basket=basket, product=product).first()
    else:
        # –î–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        basket = request.session.get('basket_id')
        basket_item = BasketItem.objects.filter(basket=basket, product=product).first()
    if basket_item:
        basket_item.delete()
    return redirect('basket:basket')


# @csrf_exempt
def update_basket(request):
    if request.method == "POST":
        try:
            data = json.loads( request.body )
            item_id = data.get("item_id")
            quantity = int( data.get("quantity"))

            print( f"üì© –ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ: item_id={item_id}, quantity={quantity}")

            basket_item = BasketItem.objects.get(id=item_id)
            basket_item.quantity = quantity
            basket_item.save()  # –ó–¥–µ—Å—å total_price –ø–µ—Ä–µ—Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

            basket = Basket.objects.get( id=basket_item.basket.id )

            return JsonResponse( {
                "success": True,
                "item_total_price": basket_item.total_price,  # –¢–µ–ø–µ—Ä—å —ç—Ç–æ @property
                "basket_total_price": sum( item.total_price for item in basket.items.all() )
            } )
        except BasketItem.DoesNotExist:
            return JsonResponse({"success": False, "message": "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"} )
        except Exception as e:
            return JsonResponse({"success": False, "message": str( e )} )

    return JsonResponse({"success": False, "message": "–ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞"})


def del_all(request):
    # –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if request.user.is_authenticated:
        basket = Basket.objects.get(user=request.user)
    # –î–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    else:
        basket_id = request.session.get('basket_id')
        basket = Basket.objects.get(id=basket_id)
    if basket:
        basket.clear()
    else:
        return redirect('products:index')
    return redirect('products:index')